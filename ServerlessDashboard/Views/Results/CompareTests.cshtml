@using ServerlessDashboard.Models
@model TestComparisonModel
@{
    ViewBag.Title = "Tests comparison";
    Layout = "~/Views/Shared/_Layout.cshtml";
    var throughputContainerName = "flot-throughput-container";
    var latencyContainerName = "flot-latency-container";
    var errorsContainerName = "flot-errors-container";
    var timeoutContainerName = "flot-timeout-container";
    var hostConcurrencyContainerName = "flot-concurrency-container";
}

<h3>Comparing tests @Model.FirstTest.Name and @Model.SecondTest.Name</h3>

<div id="test">
    <hr />
    <table>
        <thead>
            <tr style="border: 1px solid black">
                <th  style="border-left: 1px solid black">Name</th>
                <th style="border-left: 1px solid black">Platform</th>
                <th style="border-left: 1px solid black">Total execution requests</th>
                <th style="border-left: 1px solid black">Succeeded executions</th>
                <th style="border-left: 1px solid black">Failed executions</th>
                <th style="border-left: 1px solid black">Timeout executions</th>
                <th style="border-left: 1px solid black">Average latency</th>
                <th style="border-left: 1px solid black">TargetEps</th>
                <th style="border-left: 1px solid black">ExecutionCount</th>
                <th style="border-left: 1px solid black">ExecutionTimeStd</th>
                <th style="border-left: 1px solid black">FunctionClockTime</th>
                <th style="border-left: 1px solid black">HostConcurrency</th>
                <th style="border-left: 1px solid black">Throughput</th>
                <th style="border-left: 1px solid black">Errors</th>
            </tr>
        </thead>
        <tbody>
        @foreach (var testResult in new List<TestResultsModel> { Model.FirstTest, Model.SecondTest })
        {
            <tr>
                <td style="border-left: 1px solid black"><b>@testResult.Name</b></td>
                <td style="border-left: 1px solid black">@testResult.Platform</td>
                <td style="border-left: 1px solid black">@testResult.TotalExecutionRequests</td>
                <td style="border-left: 1px solid black">@testResult.SucceededExecutions</td>
                <td style="border-left: 1px solid black">@testResult.FailedExecutions</td>
                <td style="border-left: 1px solid black">@testResult.TimeoutExecutions</td>
                <td style="border-left: 1px solid black">@(testResult.AverageLatency.ToString("F4"))</td>
                <td style="border-left: 1px solid black">@testResult.TargetEps</td>
                <td style="border-left: 1px solid black">@testResult.ExecutionCount</td>
                <td style="border-left: 1px solid black">@(testResult.ExecutionTimeStandardDeviation?.ToString("F4"))</td>
                <td style="border-left: 1px solid black">@(testResult.FunctionClockTime?.ToString("F4"))</td>
                <td style="border-left: 1px solid black">@(testResult.HostConcurrency?.ToString("F4"))</td>
                <td style="border-left: 1px solid black">@(testResult.Throughput?.ToString("F4"))</td>
                <td style="border-left: 1px solid black; border-right: 1px solid black">@testResult.Errors</td>
            </tr>
        }
            <tr style="border-top: 1px black solid; border-bottom: 1px black solid">
                <td style="border-left: 1px solid black"><b>Diff</b></td>
                <td style="border-left: 1px solid black">@Model.PlatformDiff</td>
                <td style="border-left: 1px solid black">@Model.TotalExecutionRequestsDiff</td>
                <td style="border-left: 1px solid black">@Model.SucceededExecutionsDiff</td>
                <td style="border-left: 1px solid black">@Model.FailedExecutionsDiff</td>
                <td style="border-left: 1px solid black">@Model.TimeoutExecutionsDiff</td>
                <td style="border-left: 1px solid black">@Model.AverageLatencyDiff</td>
                <td style="border-left: 1px solid black">@Model.TargetEpsDiff</td>
                <td style="border-left: 1px solid black">@Model.ExecutionCountDiff</td>
                <td style="border-left: 1px solid black">@Model.ExecutionTimeStdDiff</td>
                <td style="border-left: 1px solid black">@Model.FunctionClockTimeDiff</td>
                <td style="border-left: 1px solid black">@Model.HostConcurrencyDiff</td>
                <td style="border-left: 1px solid black">@Model.ThroughputDiff</td>
                <td style="border-left: 1px solid black; border-right: 1px solid black">@Model.ErrorsDiff</td>
            </tr>
        </tbody>
    </table>

    <h4>Throughput:</h4>
    <div id="legend-@throughputContainerName" style="float: left; padding: 15px 30px "></div>
    <div id="@throughputContainerName" style="border: 1px solid black; width: 1300px; height: 400px;"></div>

    <h4>Latency:</h4>
    <div id="legend-@latencyContainerName" style="float: left; padding: 15px 30px "></div>
    <div id="@latencyContainerName" style="border: 1px solid black; width: 1300px; height: 400px;"></div>

    <h4>Errors:</h4>
    <div id="legend-@errorsContainerName" style="float: left; padding: 15px 30px "></div>
    <div id="@errorsContainerName" style="border: 1px solid black; width: 1300px; height: 400px;"></div>

    <h4>Timeouts:</h4>
    <div id="legend-@timeoutContainerName" style="float: left; padding: 15px 30px "></div>
    <div id="@timeoutContainerName" style="border: 1px solid black; width: 1300px; height: 400px;"></div>

    <h4>Host concurrenty:</h4>
    <div id="legend-@hostConcurrencyContainerName" style="float: left; padding: 15px 30px "></div>
    <div id="@hostConcurrencyContainerName" style="border: 1px solid black; width: 1300px; height: 400px;"></div>
    
    <script type="text/javascript">
        function getUtcNow() {
            var now = new Date();
            return new Date(now.getTime());
        }

        function printGraph(containerSelector, data, legendSelector) {
            $.plot(containerSelector, data, {
                series: {
                    shadowSize: 0	// Drawing is faster without shadows
                },
                yaxis: [{
                    min: 0,
                    position: "left",
                    alignTicksWithAxis: null
                },
                {
                    position: "right",
                    alignTicksWithAxis: 1
                }],
                xaxis: {
                    show: true,
                    mode: "time",
                    timezone: "UTC"
                },
                legend: {
                    show: true,
                    placement: 'outsideGrid',
                    container: $(legendSelector)
                }
            });
        };

        $(function() {
            // We use an inline data source in the example, usually data would
            // be fetched from a server
            var throughputData = @Html.Raw(Json.Encode(Model.ComparedThroughput));
            printGraph("#@throughputContainerName", throughputData, "#legend-@throughputContainerName");

            var latencyData = @Html.Raw(Json.Encode(Model.ComparedLatency));
            printGraph("#@latencyContainerName", latencyData, "#legend-@latencyContainerName");

            var errorData = @Html.Raw(Json.Encode(Model.ComparedErrorCount));
            printGraph("#@errorsContainerName", errorData, "#legend-@errorsContainerName");

            var timeoutData = @Html.Raw(Json.Encode(Model.ComparedTimeoutCount));
            printGraph("#@timeoutContainerName", timeoutData, "#legend-@timeoutContainerName");

            var hostConcurrencyData = @Html.Raw(Json.Encode(Model.ComparedHostConcurrencyCount));
            printGraph("#@hostConcurrencyContainerName", hostConcurrencyData, "#legend-@hostConcurrencyContainerName");
        });
    </script>
</div>